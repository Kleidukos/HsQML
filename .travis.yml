language: c

sudo: required
dist: trusty #

matrix:
  include:
    - env: CABALVER=1.16 GHCVER=7.4.2
      addons: {apt: {packages: [cabal-install-1.16,ghc-7.4.2,c2hs,qt5-default,qtdeclarative5-dev,qtdeclarative5-qtquick2-plugin,qtdeclarative5-window-plugin], sources: [hvr-ghc]}}
    - env: CABALVER=1.16 GHCVER=7.6.3
      addons: {apt: {packages: [cabal-install-1.16,ghc-7.6.3,c2hs,qt5-default,qtdeclarative5-dev,qtdeclarative5-qtquick2-plugin,qtdeclarative5-window-plugin], sources: [hvr-ghc]}}
    - env: CABALVER=1.18 GHCVER=7.8.4
      addons: {apt: {packages: [cabal-install-1.18,ghc-7.8.4,c2hs,qt5-default,qtdeclarative5-dev,qtdeclarative5-qtquick2-plugin,qtdeclarative5-window-plugin], sources: [hvr-ghc]}}
    - env: CABALVER=1.22 GHCVER=7.10.3
      addons: {apt: {packages: [cabal-install-1.22,ghc-7.10.3,c2hs,qt5-default,qtdeclarative5-dev,qtdeclarative5-qtquick2-plugin,qtdeclarative5-window-plugin],sources: [hvr-ghc]}}
    - env: CABALVER=1.24 GHCVER=8.0.1
      addons: {apt: {packages: [cabal-install-1.24,ghc-8.0.1,c2hs,qt5-default,qtdeclarative5-dev,qtdeclarative5-qtquick2-plugin,qtdeclarative5-window-plugin],  sources: [hvr-ghc]}}
    - env: CABALVER=head GHCVER=head
      addons: {apt: {packages: [cabal-install-head,ghc-head,c2hs,qt5-default,qtdeclarative5-dev,qtdeclarative5-qtquick2-plugin,qtdeclarative5-window-plugin],  sources: [hvr-ghc]}}

  allow_failures:
    - env: CABALVER=head GHCVER=head

before_install:
  - export PATH=/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$PATH

install:
  - cabal --version
  - echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
  - travis_retry cabal update
  - travis_retry cabal install --only-dependencies --enable-tests --enable-benchmarks

before_script:
  - "export DISPLAY=:99.0"
  - "sh -e /etc/init.d/xvfb start"
  - sleep 3 # give xvfb some time to start

# Here starts the actual work to be performed for the package under
# test; any command which exits with a non-zero exit code causes the
# build to fail.
script:
  # -v2 provides useful information for debugging
  - cabal configure --enable-tests --enable-benchmarks -v2

  # this builds all libraries and executables
  # (including tests/benchmarks)
  - cabal build

  - cabal test
  - cabal check

  # tests that a source-distribution can be generated
  - cabal sdist

  # check that the generated source-distribution can be built & installed
  - SRC_TGZ=$(cabal info . | awk '{print $2;exit}').tar.gz &&
    (cd dist && cabal install --force-reinstalls "$SRC_TGZ")

# EOF
